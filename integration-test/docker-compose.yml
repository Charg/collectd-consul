version: '2'
services:
  collectd:
    build:
      context: ..
      dockerfile: integration-test/Dockerfile.collectd
    environment:
      SF_API_TOKEN: testing
      SF_INGEST_HOST: fake_sfx
    depends_on:
      - fake_sfx

  collectdamazon2017:
    build:
      context: ..
      dockerfile: integration-test/Dockerfile.collectd.amazon2017.03
    container_name: collectd
    depends_on:
      - fake_sfx

  server-1:
    image: consul:0.7.1
    volumes:
      - ./config:/consul/config
    command: >
      consul agent
      -node=server-1
      -server
      -bootstrap 
      -data-dir=/tmp/data
      -config-dir=/consul/config
      -client 0.0.0.0

  server-2:
    image: consul:0.8.0
    depends_on:
      - server-1
    command: >
      consul agent
      -node server-2
      -node-id='31de20e0-43fc-43b0-8bbf-436f1db7e16e'
      -server
      -retry-join "server-1"
      -data-dir /tmp/data
      -client 0.0.0.0

  server-3:
    image: consul:0.9.2
    depends_on:
      - server-1
    command: >
      consul agent
      -node server-3
      -server
      -retry-join "server-1"
      -data-dir /tmp/data
      -client 0.0.0.0

  client:
    image: consul:0.7.5
    depends_on:
      - server-1
    command: >
      consul agent
      -node client
      -retry-join "server-1"
      -data-dir /tmp/data
      -client 0.0.0.0

  fake_sfx:
    build:
      context: .
      dockerfile: Dockerfile.sink

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - collectd
      - server-1
      - server-2
      - server-3
      - client

  test26: # this is to test that python2.6 works (because collectd is linked to 2.6 on amazon)
    build: # do not run test and test26 at the same time
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - collectdamazon2017
      - server-1
      - server-2
      - server-3
      - client
